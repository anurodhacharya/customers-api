name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.1
        env:
          POSTGRES_USER: aurickcode
          POSTGRES_PASSWORD: aurickpassword
          POSTGRES_DB: customer
        ports: 
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Echo commit message and sha   
        run: >
          curl -X POST -H 'Content-type: application/json' --data 
          '{"text":"https://github.com/anurodhacharya/customers-api/commit/${{ github.sha }}"}' 
          ${{ secrets.WEBHOOK_URL }}              
  
      - uses: actions/checkout@v3

      - name: Post slack message
        run: >
          curl -X POST -H 'Content-type: application/json' --data 
          '{"text":"Deployment Started :progress_bar: :fingerscrossed:"}' 
          ${{ secrets.WEBHOOK_URL }}

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "21"
          cache: "maven"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Post slack message
        run: >
          curl -X POST -H 'Content-type: application/json' --data 
          '{"text":"Building with Maven :maven:"}' 
          ${{ secrets.WEBHOOK_URL }}

      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{ steps.build-number.outputs.BUILD_NUMBER }} jib:build

      - name: Post slack message
        run: >
          curl -X POST -H 'Content-type: application/json' --data
          '{"text":":docker: Image ${{steps.build-number.outputs.BUILD_NUMBER}} pushed to dockerhub repository."}' 
          ${{ secrets.WEBHOOK_URL }}

      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(anurodh1/aurickcode-api:)([^"]*)_\1'${{ steps.build-number.outputs.BUILD_NUMBER }}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json

      - name: Post slack message
        run: >
          curl -X POST -H 'Content-type: application/json' --data 
          '{"text":":aws: Starting deployment to Elastic Beanstalk!"}' 
          ${{ secrets.WEBHOOK_URL }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: backend/Dockerrun.aws.json

      - name: Post slack message
        run: >
          curl -X POST -H 'Content-type: application/json' --data 
          '{"text":":github: Commiting to the repo!"}'
          ${{ secrets.WEBHOOK_URL }}

      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push
      
      - name: Deployment and commit completed
        run: >
          curl -X POST -H 'Content-type: application/json' --data 
          '{"text":"Deployment and commit completed :github_check_mark: :partyblob: - https://github.com/anurodhacharya/customers-api"}' 
          ${{ secrets.WEBHOOK_URL }}
      
      - name: Send Slack Message
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' --data
          '{"text":"Job Status ${{ job.status }}"}' 
          ${{ secrets.WEBHOOK_URL }}
